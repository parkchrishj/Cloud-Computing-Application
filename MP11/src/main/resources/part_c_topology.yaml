# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

# topology definition
# name to be used when submitting
name: "part-C"

# TODO
# Task: implement your topology for part c

# topology configuration
# this will be passed to the submitter as a map of config options
config:
    storm.local.hostname: "localhost"
    topology.max.task.parallelism: 3
    # set this to true if you want to see more debug log
    # set it to false before submitting
    topology.debug: false
    # Hint: you can set input file path here
    # make sure it's "/tmp/data.txt" in your final submission
    inputFile: "/tmp/data.txt"
    
components:
  - id: "poolConfig"
    className: "org.apache.storm.redis.common.config.JedisPoolConfig"
    constructorArgs:
      - "localhost"
      - 6379
      - 2000
      - "uiuc_cs498_mp7"
      - 0

  # Hint: redis hash key for part C is "partCWordCount"
  - id: "storeMapper"
    className: "edu.illinois.storm.WordCountStoreMapper"
    constructorArgs:
    - "partCWordCount"
# spout definitions
spouts:
  - id: "spout-1"
    className: "org.apache.storm.flux.wrappers.spouts.FluxShellSpout"
    constructorArgs:
    #commandline
    - ["python", "file_reader_spout.py"]
    #output
    - ["word"]
# bolt definitions
bolts:
  # Hint: the new normalize bolt you need implement in this part is
  # multilang/resources/normalizer_bolt.py
  - id: "split"
    className: "org.apache.storm.flux.wrappers.bolts.FluxShellBolt"
    constructorArgs:
    - ["python", "split_sentence_bolt.py"]
    - ["word"]
    parallelism: 1

  - id: "normalize"
    className: "org.apache.storm.flux.wrappers.bolts.FluxShellBolt"
    constructorArgs:
    - ["python", "normalizer_bolt.py"]
    - ["word"]
    parallelism: 1
  
  - id: "count"
    className: "org.apache.storm.flux.wrappers.bolts.FluxShellBolt"
    constructorArgs:
    - ["python", "word_count_bolt.py"]
    - ["word", "count"]
    parallelism: 1

  - id: "map"
    className: "org.apache.storm.redis.bolt.RedisStoreBolt"
    constructorArgs:
      - ref: "poolConfig"
      - ref: "storeMapper"
    parallelism: 1

# stream definitions
# stream definitions define connections between spouts and bolts.
streams:
  # Hint: add new normalize bolt into the topology
  - name: "spout-1 --> split"
    from: "spout-1"
    to: "split"
    grouping:
      type: SHUFFLE
  
  - name: "split --> normalize"
    from: "split"
    to: "normalize"
    grouping:
      type: SHUFFLE

  - name: "normalize --> count"
    from: "normalize"
    to: "count"
    grouping:
      type: FIELDS
      args: ["word"]

  - name: "count --> map"
    from: "count"
    to: "map"
    grouping:
      type: SHUFFLE